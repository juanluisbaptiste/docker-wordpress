#!/usr/bin/with-contenv bash

source /assets/functions/00-container
prepare_service
PROCESS_NAME="wordpress"


sanity_db mariadb
sanity_var SITE_URL "Site URL"


if [ -n "$SITE_PORT" ]; then
    SITE_PORT=":${SITE_PORT}"
fi

### Create Directory if doesn't exist
mkdir -p ${NGINX_WEBROOT}
chown ${NGINX_USER}:${NGINX_GROUP} ${NGINX_WEBROOT}

### Make sure that DB is accessible
db_ready mariadb

### Perform Nginx reverse proxy modifications
if var_true $ENABLE_HTTPS_REVERSE_PROXY ; then
    echo "fastcgi_param  HTTPS 'on';" >> /etc/nginx/fastcgi_params
    PROTOCOL="https://"
else
    print_warn "Disabling Nginx Reverse Proxy HTTPS Termination Support"
    echo "fastcgi_param  HTTPS 'off';" >> /etc/nginx/fastcgi_params
    PROTOCOL="http://"
fi

### Check to see if this is a new install, if yes download Wordpress and other pieces...
if [ ! -f ${NGINX_WEBROOT}/wp-load.php ] ; then
   sanity_var ADMIN_EMAIL "Admin Email"
   sanity_var ADMIN_PASS "Admin Password"

   print_warn "Wordpress Installation not found, Downloading and setting up - Please wait 1-3 minutes"
   cd ${NGINX_WEBROOT}
   silent sudo -u ${NGINX_USER} wp-cli core download --locale=${SITE_LOCALE}
   silent sudo -u ${NGINX_USER} wp-cli core config --dbhost=${DB_HOST} --dbname=${DB_NAME} --dbprefix=${DB_PREFIX} --dbuser=${DB_USER} --dbpass=${DB_PASS} --dbcharset=${DB_CHARSET}
   silent sudo -u ${NGINX_USER} wp-cli core install --url=${PROTOCOL}${SITE_URL}${SITE_PORT} --title="${SITE_TITLE}" --admin_user=${ADMIN_USER} --admin_password=${ADMIN_PASS} --admin_email=${ADMIN_EMAIL} --skip-email
   chmod 644 wp-config.php
### Add URL information to allow for switching host/domainnames easily
   echo "define( 'WP_HOME', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );" >> ${NGINX_WEBROOT}/wp-config.php
   echo "define( 'WP_SITEURL', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );" >> ${NGINX_WEBROOT}/wp-config.php
   silent rm -rf ${NGINX_WEBROOT}/readme.html
   silent rm -rf ${NGINX_WEBROOT}/license.txt
   silent rm -rf ${NGINX_WEBROOT}/wp-content/plugins/hello.php
   silent chown -R ${NGINX_USER}:${NGINX_GROUP} ${NGINX_WEBROOT}
else
  if [ "$SITE_URL_UPDATE_MODE" = "ALL" ] || [ "$SITE_URL_UPDATE_MODE" = "FILE" ]; then
     if ! grep -c -q "'WP_HOME'" ${NGINX_WEBROOT}/wp-config.php ; then
         echo "define( 'WP_HOME', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );" >> ${NGINX_WEBROOT}/wp-config.php
     fi

     if ! grep -c -q "'WP_SITEURL'" ${NGINX_WEBROOT}/wp-config.php ; then
         echo "define( 'WP_SITEURL', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );" >> ${NGINX_WEBROOT}/wp-config.php
     fi
  fi
fi

### Change URLs if different   
   OLDURL=`grep "WP_HOME" ${NGINX_WEBROOT}/wp-config.php | cut -d \' -f 4`
   if [ "$OLDURL" != "${PROTOCOL}${SITE_URL}${SITE_PORT}" ]; then
      cd ${NGINX_WEBROOT}
   if [ "$SITE_URL_UPDATE_MODE" = "ALL" ] || [ "$SITE_URL_UPDATE_MODE" = "FILE" ]; then
      print_notice "Modifying wordpress to serve from ${OLDURL} to ${PROTOCOL}${SITE_URL}${SITE_PORT} in wp-config.php"
      sed -i "s#define( 'WP_HOME'.*#define( 'WP_HOME', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );#g" ${NGINX_WEBROOT}/wp-config.php
      sed -i "s#define( 'WP_SITEURL'.*#define( 'WP_SITEURL', '${PROTOCOL}${SITE_URL}${SITE_PORT}' );#g" ${NGINX_WEBROOT}/wp-config.php
   fi 
   if [ "$SITE_URL_UPDATE_MODE" = "ALL" ] || [ "$SITE_URL_UPDATE_MODE" = "DB" ]; then
      print_notice "Modifying wordpress to serve from ${OLDURL} to ${PROTOCOL}${SITE_URL}${SITE_PORT} in database"
      silent sudo -u ${NGINX_USER} wp-cli search-replace '${OLD_URL}' '${PROTOCOL}${SITE_URL}${SITE_PORT}' --skip-columns=guid
   fi 
fi

### Add alias for running WP-CLI
echo "alias wp-cli='cd ${NGINX_WEBROOT}; sudo -u ${NGINX_USER} wp-cli'" > /root/.bashrc

### Force Reset Permissions for Security
if var_true $FORCE_RESET_PERMISSIONS ; then
    chown -R ${NGINX_USER}:${NGINX_GROUP} ${NGINX_WEBROOT}
fi
print_info "Wordpress Initialization Complete, now starting webserver and PHP engine"

liftoff
